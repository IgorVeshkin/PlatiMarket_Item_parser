import sqlite3
import uuid

def main():
    sqliteConnection = sqlite3.connect('database.db')

    cursor = sqliteConnection.cursor()

    # –°–æ–∑–¥–∞—é UUID –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞

    # –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫—É: sqlite3.ProgrammingError: Error binding parameter 1: type 'UUID' is not supported
    # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ uuid –≤ string —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ str()
    seller_id = str(uuid.uuid4())

    # –ü—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: https://stackoverflow.com/questions/6242756/how-to-retrieve-inserted-id-after-inserting-row-in-sqlite-using-python
    cursor.execute("""
        INSERT INTO Seller (id, name, accountURL) VALUES (?, ?, ?)
        """, (seller_id, 'CoTHuK', 'https://plati.market/seller/cothuk/889182/'))

    sqliteConnection.commit()

    # –°–æ–∑–¥–∞—é UUID –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ Item_Data
    data_id = str(uuid.uuid4())

    cursor.execute("""
            INSERT INTO Item_Data (id, name, seller, soldCount, refundCount, ImageURL) VALUES (?, ?, ?, ?, ?, ?)
            """, (data_id, '‚úÖ RESIDENT EVIL 4 Deluxe REMAKE –ö–õ–Æ–ß XBOX SERIES ‚úÖ üîë', seller_id, 12, 0, 'https://digiseller.mycdn.ink/preview/889182/p1_4654421_9bab21b0.jpg'))

    sqliteConnection.commit()

    # –°–æ–∑–¥–∞—é UUID –¥–ª—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ Item_Price
    price_id = str(uuid.uuid4())

    # –°–æ–∑–¥–∞—é –∑–∞–ø–∏—Å—å —Ü–µ–Ω—ã
    cursor.execute("""
            INSERT INTO Item_Price (id, price, ItemDataKey) VALUES (?, ?, ?)
            """, (price_id, 2367, data_id))

    # –°–æ–∑–¥–∞–Ω–∏—é UUID –¥–ª—è —Å—Å—ã–ª–∫–∏ —Ç–æ–≤–∞—Ä–∞ Item_Url
    url_id = str(uuid.uuid4())

    cursor.execute("""
            INSERT INTO Item_Url (id, url, data) VALUES (?, ?, ?)
            """, (url_id, 'https://plati.market/https://plati.market/itm/resident-evil-4-deluxe-remake-kljuch-xbox-series/4654421', data_id))

    sqliteConnection.commit()

    cursor.close()

    print('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ...')

if __name__ == '__main__':
    main()